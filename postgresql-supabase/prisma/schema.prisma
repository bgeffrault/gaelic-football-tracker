// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  members Member[]
}

model Member {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  teams      Team[]
  club       Club?    @relation(fields: [clubId], references: [id])
  clubId     Int?
  shoot      Shoot[]
}

model Club {
  id       Int      @id @default(autoincrement())
  clubName String
  members  Member[]
  teams    Team[]
}

model Team {
  id        Int         @id @default(autoincrement())
  teamName  String
  members   Member[]
  club      Club        @relation(fields: [clubId], references: [id])
  clubId    Int
  gameScore GameScore[]
}

model Game {
  id         Int         @id @default(autoincrement())
  date       DateTime    @default(now())
  duration   Int
  name       String
  gameEnded  Boolean     @default(false)
  gameScores GameScore[]
}

model GameScore {
  id      Int   @id @default(autoincrement())
  teamId  Int
  team    Team  @relation(fields: [teamId], references: [id])
  score   Score @relation(fields: [scoreId], references: [id])
  scoreId Int
  game    Game  @relation(fields: [gameId], references: [id])
  gameId  Int
}

model Score {
  id        Int         @id @default(autoincrement())
  shoot     Shoot[]
  accuracy  Float?
  gameScore GameScore[]
}

model Shoot {
  id       Int    @id @default(autoincrement())
  x        Int
  y        Int
  memberId Int
  member   Member @relation(fields: [memberId], references: [id])
  scoreId  Int?
  score    Score? @relation(fields: [scoreId], references: [id])
  type     String
}
